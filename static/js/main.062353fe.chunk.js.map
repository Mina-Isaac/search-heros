{"version":3,"sources":["store/rootReducer.js","store/reducers/loadingReducer.js","store/constants.js","store/reducers/resultReducer.js","store/actions.js","store/store.js","api/index.js","store/epic.js","App.js","Utilities/debounceHook.js","index.js"],"names":["combineReducers","loading","action","type","result","state","searchSuccess","epicMiddleware","createEpicMiddleware","dependencies","query","results","heroes","filter","hero","keep","Object","keys","forEach","key","toString","toLowerCase","includes","Promise","resolve","setTimeout","Math","ceil","random","enhancer","compose","applyMiddleware","store","createStore","rootReducer","run","action$","state$","search","pipe","switchMap","from","map","catchError","error","of","searchFailure","App","dispatch","useDispatch","useState","setQuery","debouncedQuery","value","delay","debouncedValue","setDebouncedValue","useEffect","handler","clearTimeout","useDebounce","useSelector","searchRequest","resultList","useMemo","item","i","className","name","alias","placeholder","onChange","event","target","class","ReactDOM","render","document","getElementById"],"mappings":"g7BAIeA,kBAAgB,CAC7BC,QCHa,WAAwC,wDAAC,IAATC,EAAQ,uCACrD,OAAQA,EAAOC,MACb,ICJmB,iBDKjB,OAAO,EACT,ICLmB,iBDOnB,ICNmB,iBDQnB,QACE,OAAO,IDLXC,OGJa,WAAsC,IAArBC,EAAoB,uDAAZ,GAAIH,EAAQ,uCAClD,OAAQA,EAAOC,MACb,IDHmB,iBCIjB,OAAOD,EAAOE,OAChB,IDJmB,iBCKjB,MAAO,GACT,QACE,OAAOC,M,gDCFPC,EAAgB,SAACF,GAAD,MAAa,CACjCD,KFPqB,iBEQrBC,WCHIG,EAAiBC,YAAqB,CAC1CC,aCLoB,SAAAC,GACpB,IAAMC,EAAUC,IAAOC,QAAO,SAAAC,GAC5B,IAAIC,GAAO,EAUX,OARAC,OAAOC,KAAKH,GAAMI,SAAQ,SAAAC,GACZL,EAAKK,GAAKC,WAEdC,cAAcC,SAASZ,EAAMW,iBACnCN,GAAO,MAIJA,KAGT,OAAO,IAAIQ,SAAQ,SAAAC,GACjBC,YAAW,WACTD,EAAQb,KACPe,KAAKC,KAAqB,IAAhBD,KAAKE,iBDXhBC,EAAWC,YAAQC,YAAgBxB,IACnCyB,EAAQC,YAAYC,EAAaL,GACvCtB,EAAe4B,KENmB,SAACC,EAASC,EAAQC,GAAlB,OAChCF,EAAQG,KACN1B,aAAO,SAACX,GAAD,MLPY,mBKOAA,EAAOC,QAC1BqC,aAAU,SAACtC,GAAD,OACRuC,YAAKH,EAAOpC,EAAOQ,QAAQ6B,KACzBG,YAAIpC,GACJqC,aAAW,SAACC,GAAD,OAAWC,YHCR,SAACD,GAAD,MAAY,CAChCzC,KFXqB,iBEYrByC,SGH+BE,CAAcF,eFEhCZ,Q,kBG8CAe,EArDH,WACV,IAAMC,EAAWC,cADD,EAEUC,mBAAS,IAFnB,mBAETxC,EAFS,KAEFyC,EAFE,KAGVC,ECPO,SAAqBC,GAAqB,IAAdC,EAAa,uDAAL,IAAK,EACVJ,mBAASG,GADC,mBAC/CE,EAD+C,KAC/BC,EAD+B,KAYtD,OATAC,qBAAU,WACR,IAAMC,EAAUjC,YAAW,WACzB+B,EAAkBH,KACjBC,GACH,OAAO,WACLK,aAAaD,MAEd,CAACL,EAAOC,IAEJC,EDLgBK,CAAYlD,EAAO,KACpCC,EAAUkD,aAAY,SAACxD,GAAD,OAAWA,EAAMD,UACvCH,EAAU4D,aAAY,SAACxD,GAAD,OAAWA,EAAMJ,WAE7CwD,qBAAU,WACRT,EJZkB,SAACtC,GAAD,MAAY,CAChCP,KFHqB,iBEIrBO,SIUWoD,CAAcV,MACtB,CAACA,IAMJ,IAAMW,EAAaC,mBACjB,kBACErD,EAAQ+B,KAAI,SAACuB,EAAMC,GACjB,OACE,yBAAKC,UAAU,SAAShD,IAAK+C,GAC1BD,EAAKG,KAAO,IACb,0BAAMD,UAAU,SAASF,EAAKI,aAItC,CAAC1D,IAGH,OACE,yBAAKwD,UAAU,OACb,iDACA,6BACA,yBAAKA,UAAU,WACb,yBAAKA,UAAU,mBACb,2BACEG,YAAY,uCACZH,UAAU,QACVhE,KAAK,OACLkD,MAAO3C,EACP6D,SA5BV,SAAsBC,GACpBrB,EAASqB,EAAMC,OAAOpB,UA6BfpD,GACC,yBAAKyE,MAAM,kBACT,uBAAGA,MAAM,aAIdX,KE9CTY,IAASC,OACP,kBAAC,IAAD,CAAU5C,MAAOA,GACf,kBAAC,EAAD,OAEF6C,SAASC,eAAe,W","file":"static/js/main.062353fe.chunk.js","sourcesContent":["import { combineReducers } from \"redux\";\r\nimport loading from \"./reducers/loadingReducer\";\r\nimport result from \"./reducers/resultReducer\";\r\n\r\nexport default combineReducers({\r\n  loading,\r\n  result,\r\n});\r\n","import * as actionTypes from \"../constants\";\r\n\r\nexport default function reducer(state = false, action) {\r\n  switch (action.type) {\r\n    case actionTypes.SEARCH_REQUEST:\r\n      return true;\r\n    case actionTypes.SEARCH_SUCCESS:\r\n      return false;\r\n    case actionTypes.SEARCH_FAILURE:\r\n      return false;\r\n    default:\r\n      return false;\r\n  }\r\n}\r\n","const SEARCH_REQUEST = \"SEARCH_REQUEST\";\r\nconst SEARCH_SUCCESS = \"SEARCH_SUCCESS\";\r\nconst SEARCH_FAILURE = \"SEARCH_FAILURE\";\r\n\r\nexport { SEARCH_REQUEST, SEARCH_SUCCESS, SEARCH_FAILURE };\r\n","import * as actionTypes from \"../constants\";\r\n\r\nexport default function reducer(state = [], action) {\r\n  switch (action.type) {\r\n    case actionTypes.SEARCH_SUCCESS:\r\n      return action.result;\r\n    case actionTypes.SEARCH_FAILURE:\r\n      return [];\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import * as actionTypes from \"./constants\";\r\n\r\nconst searchRequest = (query) => ({\r\n  type: actionTypes.SEARCH_REQUEST,\r\n  query,\r\n});\r\n\r\nconst searchSuccess = (result) => ({\r\n  type: actionTypes.SEARCH_SUCCESS,\r\n  result,\r\n});\r\n\r\nconst searchFailure = (error) => ({\r\n  type: actionTypes.SEARCH_FAILURE,\r\n  error,\r\n});\r\n\r\nexport { searchRequest, searchSuccess, searchFailure };\r\n","import { applyMiddleware, compose, createStore } from \"redux\";\r\nimport { createEpicMiddleware } from \"redux-observable\";\r\nimport { search } from \"../api\";\r\nimport rootReducer from \"./rootReducer\";\r\nimport { fetchSearchResults } from \"./epic\";\r\n\r\nconst epicMiddleware = createEpicMiddleware({\r\n  dependencies: search,\r\n});\r\nconst enhancer = compose(applyMiddleware(epicMiddleware));\r\nconst store = createStore(rootReducer, enhancer);\r\nepicMiddleware.run(fetchSearchResults);\r\n\r\nexport default store;\r\n","import { heroes } from \"./db.json\";\r\n\r\nexport const search = query => {\r\n  const results = heroes.filter(hero => {\r\n    let keep = false;\r\n\r\n    Object.keys(hero).forEach(key => {\r\n      const val = hero[key].toString();\r\n\r\n      if (val.toLowerCase().includes(query.toLowerCase())) {\r\n        keep = true;\r\n      }\r\n    });\r\n\r\n    return keep;\r\n  });\r\n\r\n  return new Promise(resolve => {\r\n    setTimeout(() => {\r\n      resolve(results);\r\n    }, Math.ceil(Math.random() * 500));\r\n  });\r\n};\r\n","import { of, from } from \"rxjs\";\r\nimport * as actionTypes from \"./constants\";\r\nimport { catchError, map, filter, switchMap } from \"rxjs/operators\";\r\nimport { searchSuccess, searchFailure } from \"./actions\";\r\n\r\nexport const fetchSearchResults = (action$, state$, search) =>\r\n  action$.pipe(\r\n    filter((action) => action.type === actionTypes.SEARCH_REQUEST),\r\n    switchMap((action) =>\r\n      from(search(action.query)).pipe(\r\n        map(searchSuccess),\r\n        catchError((error) => of(searchFailure(error)))\r\n      )\r\n    )\r\n  );\r\n","import React, { useEffect, useMemo, useState } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { searchRequest } from \"./store/actions\";\r\nimport useDebounce from \"./Utilities/debounceHook\";\r\nimport \"./App.css\";\r\n\r\nconst App = () => {\r\n  const dispatch = useDispatch();\r\n  const [query, setQuery] = useState(\"\");\r\n  const debouncedQuery = useDebounce(query, 500);\r\n  const results = useSelector((state) => state.result);\r\n  const loading = useSelector((state) => state.loading);\r\n\r\n  useEffect(() => {\r\n    dispatch(searchRequest(debouncedQuery));\r\n  }, [debouncedQuery]);\r\n\r\n  function handleChange(event) {\r\n    setQuery(event.target.value);\r\n  }\r\n\r\n  const resultList = useMemo(\r\n    () =>\r\n      results.map((item, i) => {\r\n        return (\r\n          <div className=\"result\" key={i}>\r\n            {item.name + \" \"}\r\n            <span className=\"alias\">{item.alias}</span>\r\n          </div>\r\n        );\r\n      }),\r\n    [results]\r\n  );\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <h1>Searchable heroes</h1>\r\n      <br />\r\n      <div className=\"Wrapper\">\r\n        <div className=\"input-container\">\r\n          <input\r\n            placeholder=\"Search DC heros by name, alias or ID\"\r\n            className=\"input\"\r\n            type=\"text\"\r\n            value={query}\r\n            onChange={handleChange}\r\n          />\r\n          {loading && (\r\n            <div class=\"icon-container\">\r\n              <i class=\"loader\"></i>\r\n            </div>\r\n          )}\r\n        </div>\r\n        {resultList}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import { useState, useEffect } from \"react\";\r\n\r\nexport default function useDebounce(value, delay = 500) {\r\n  const [debouncedValue, setDebouncedValue] = useState(value);\r\n\r\n  useEffect(() => {\r\n    const handler = setTimeout(() => {\r\n      setDebouncedValue(value);\r\n    }, delay);\r\n    return () => {\r\n      clearTimeout(handler);\r\n    };\r\n  }, [value, delay]);\r\n\r\n  return debouncedValue;\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./store/store\";\r\n\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}